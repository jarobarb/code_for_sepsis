function p = jared_quiver(x,y,u,v,varargin)

  rescale = [];
  arrow_head_size_frac = 0.4*sqrt(2);
  %  1 is completely acute (i.e. no arrow head...just a point) while 0 is
  %  completely obtuse (a straight line for an arrow head)
  arrow_head_acuteness = 2/3;
  %  arrow_position = 0 -- Tail of arrow rests on point in space
  %  corresponding to the arrow
  %  1 -- Head of arrow rests on point in space corresponding to the arrow
  %  1/2 -- Middle of arrow rests on point in space corresponding to arrow
  arrow_position = 0;
  max_mag = [];
  lw = 1;

  for vac = 1:2:length(varargin)
    eval([varargin{vac},' = varargin{vac+1};']);
  end
  
  if isempty(rescale), rescale = 1; end
  
  mags = sqrt(u.^2+v.^2);
  if isempty(max_mag)
    max_mag = max(mags(:));
  end
  min_mag = min(mags(:));
  min_mag = 0;
  
%   tmp = hsv(21);
%   col_mat = colormap(flipud(tmp(1:20,:)));
%   mag_vec = linspace(min_mag,max_mag,length(col_mat))';
  col_mat = jet(128);
  mag_vec = linspace(min_mag,max_mag,length(col_mat))';
  col_mat_r = interp1(mag_vec,col_mat(:,1),mags,'linear');
  col_mat_g = interp1(mag_vec,col_mat(:,2),mags,'linear');
  col_mat_b = interp1(mag_vec,col_mat(:,3),mags,'linear');
  
  nx = numel(x); ny = numel(y);
  
  dxmin = (max(x)-min(x))/sqrt(nx);%min(min(diff(x)));
  dymin = (max(y)-min(y))/sqrt(ny);%min(min(diff(y')));
  dmin = min(dxmin,dymin);
  dmin = rescale*dmin;
  
  vertices = [[x-arrow_position*dmin*u./max_mag;...
    x+(1-arrow_position)*dmin*u./max_mag;...
    x-arrow_position*dmin*u./max_mag+...
    (dmin/max_mag)*(arrow_head_acuteness*(1-arrow_head_size_frac)*u+...
    (1-arrow_head_acuteness)*(u-arrow_head_size_frac*v));...    
    x+(1-arrow_position)*dmin*u./max_mag;...
    x-arrow_position*dmin*u./max_mag+...
    (dmin/max_mag)*(arrow_head_acuteness*(1-arrow_head_size_frac)*u+...
    (1-arrow_head_acuteness)*(u+arrow_head_size_frac*v));...
    x+(1-arrow_position)*dmin*u./max_mag],...
    [y-arrow_position*dmin*v./max_mag;...
    y+(1-arrow_position)*dmin*v./max_mag;...
    y-arrow_position*dmin*v./max_mag+...
    dmin./max_mag*(arrow_head_acuteness*(1-arrow_head_size_frac)*v+...
    (1-arrow_head_acuteness)*(v+arrow_head_size_frac*u));...
    y+(1-arrow_position)*dmin*v./max_mag;...
    y-arrow_position*dmin*v./max_mag+...
    dmin./max_mag*(arrow_head_acuteness*(1-arrow_head_size_frac)*v+...
    (1-arrow_head_acuteness)*(v-arrow_head_size_frac*u));...
    y+(1-arrow_position)*dmin*v./max_mag]];
  faces = [1:nx;[1:nx]+nx;[1:nx]+2*nx;[1:nx]+3*nx;[1:nx]+4*nx;...
    [1:nx]+5*nx]';
  
  p = patch('vertices',vertices,'faces',faces,'FaceVertexCData',...
    [mags;mags;mags;mags;mags;mags],'EdgeColor','flat',...
    'FaceColor','none','FaceAlpha',0,'LineWidth',lw);
  
%   hcell = cell(size(x));
%   for c1 = 1:size(x,1)
%     for c2 = 1:size(x,2)
% %       h = quiver(x(c1,c2),y(c1,c2),dmin*u(c1,c2)./max_mag,...
% %         dmin*v(c1,c2)./max_mag);
%       h = plot([x(c1,c2),x(c1,c2)+dmin*u(c1,c2)./max_mag],...
%         [y(c1,c2),y(c1,c2)+dmin*v(c1,c2)./max_mag],...
%         'color',[col_mat_r(c1,c2),col_mat_g(c1,c2),col_mat_b(c1,c2)],...
%         'LineWidth',min(max(x)-min(x),max(y)-min(y))/10);
% %       set(h,'color',...
% %         [col_mat_r(c1,c2),col_mat_g(c1,c2),col_mat_b(c1,c2)]);
%       hold on
%       hcell{c1,c2} = h;
%     end
%   end

end